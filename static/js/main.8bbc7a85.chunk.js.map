{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyPressed","handleKeyPress","event","setState","key","window","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,MAFhB,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZH,WAAYE,EAAME,OAfxB,uDAKE,WACEC,OAAOC,iBAAiB,UAAWC,KAAKN,kBAN5C,kCASE,WACEI,OAAOG,oBAAoB,UAAWD,KAAKN,kBAV/C,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAU,kCAA8BA,GAAe,kCAzBlE,GAAyBU,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8bbc7a85.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.Component {\n  state = {\n    keyPressed: null,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    this.setState({\n      keyPressed: event.key,\n    });\n  };\n\n  render() {\n    const { keyPressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {keyPressed ? `The last pressed key is ${keyPressed}` : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}